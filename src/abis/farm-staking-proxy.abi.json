{
    "buildInfo": {
        "rustc": {
            "version": "1.73.0-nightly",
            "commitHash": "4c8bb79d9f565115637cc6da739f8389e79f3a29",
            "commitDate": "2023-07-15",
            "channel": "Nightly",
            "short": "rustc 1.73.0-nightly (4c8bb79d9 2023-07-15)"
        },
        "contractCrate": {
            "name": "farm-staking-proxy",
            "version": "0.0.0",
            "gitVersion": "v1.6.0-1527-g9534cc41"
        },
        "framework": {
            "name": "multiversx-sc",
            "version": "0.43.3"
        }
    },
    "name": "FarmStakingProxy",
    "constructor": {
        "inputs": [
            {
                "name": "lp_farm_address",
                "type": "Address"
            },
            {
                "name": "staking_farm_address",
                "type": "Address"
            },
            {
                "name": "pair_address",
                "type": "Address"
            },
            {
                "name": "staking_token_id",
                "type": "TokenIdentifier"
            },
            {
                "name": "lp_farm_token_id",
                "type": "TokenIdentifier"
            },
            {
                "name": "staking_farm_token_id",
                "type": "TokenIdentifier"
            },
            {
                "name": "lp_token_id",
                "type": "TokenIdentifier"
            }
        ],
        "outputs": []
    },
    "endpoints": [
        {
            "name": "upgrade",
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "registerDualYieldToken",
            "onlyOwner": true,
            "mutability": "mutable",
            "payableInTokens": [
                "EGLD"
            ],
            "inputs": [
                {
                    "name": "token_display_name",
                    "type": "bytes"
                },
                {
                    "name": "token_ticker",
                    "type": "bytes"
                },
                {
                    "name": "num_decimals",
                    "type": "u32"
                }
            ],
            "outputs": []
        },
        {
            "name": "getDualYieldTokenId",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "TokenIdentifier"
                }
            ]
        },
        {
            "name": "getLpFarmAddress",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "Address"
                }
            ]
        },
        {
            "name": "getStakingFarmAddress",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "Address"
                }
            ]
        },
        {
            "name": "getPairAddress",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "Address"
                }
            ]
        },
        {
            "name": "getStakingTokenId",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "TokenIdentifier"
                }
            ]
        },
        {
            "name": "getFarmTokenId",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "TokenIdentifier"
                }
            ]
        },
        {
            "name": "getLpTokenId",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "TokenIdentifier"
                }
            ]
        },
        {
            "name": "getLpFarmTokenId",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "TokenIdentifier"
                }
            ]
        },
        {
            "name": "addSCAddressToWhitelist",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "removeSCAddressFromWhitelist",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "isSCAddressWhitelisted",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": [
                {
                    "type": "bool"
                }
            ]
        },
        {
            "name": "stakeFarmTokens",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [
                {
                    "name": "opt_orig_caller",
                    "type": "optional<Address>",
                    "multi_arg": true
                }
            ],
            "outputs": [
                {
                    "type": "StakeProxyResult"
                }
            ]
        },
        {
            "name": "claimDualYield",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [
                {
                    "name": "opt_orig_caller",
                    "type": "optional<Address>",
                    "multi_arg": true
                }
            ],
            "outputs": [
                {
                    "type": "ClaimDualYieldResult"
                }
            ]
        },
        {
            "name": "unstakeFarmTokens",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [
                {
                    "name": "pair_first_token_min_amount",
                    "type": "BigUint"
                },
                {
                    "name": "pair_second_token_min_amount",
                    "type": "BigUint"
                },
                {
                    "name": "opt_orig_caller",
                    "type": "optional<Address>",
                    "multi_arg": true
                }
            ],
            "outputs": [
                {
                    "type": "UnstakeResult"
                }
            ]
        }
    ],
    "events": [],
    "hasCallback": true,
    "types": {
        "ClaimDualYieldResult": {
            "type": "struct",
            "fields": [
                {
                    "name": "lp_farm_rewards",
                    "type": "EsdtTokenPayment"
                },
                {
                    "name": "staking_farm_rewards",
                    "type": "EsdtTokenPayment"
                },
                {
                    "name": "new_dual_yield_tokens",
                    "type": "EsdtTokenPayment"
                }
            ]
        },
        "EsdtTokenPayment": {
            "type": "struct",
            "fields": [
                {
                    "name": "token_identifier",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "token_nonce",
                    "type": "u64"
                },
                {
                    "name": "amount",
                    "type": "BigUint"
                }
            ]
        },
        "StakeProxyResult": {
            "type": "struct",
            "fields": [
                {
                    "name": "dual_yield_tokens",
                    "type": "EsdtTokenPayment"
                },
                {
                    "name": "boosted_rewards",
                    "type": "EsdtTokenPayment"
                }
            ]
        },
        "UnstakeResult": {
            "type": "struct",
            "fields": [
                {
                    "name": "other_token_payment",
                    "type": "EsdtTokenPayment"
                },
                {
                    "name": "lp_farm_rewards",
                    "type": "EsdtTokenPayment"
                },
                {
                    "name": "staking_rewards",
                    "type": "EsdtTokenPayment"
                },
                {
                    "name": "unbond_staking_farm_token",
                    "type": "EsdtTokenPayment"
                }
            ]
        }
    }
}
