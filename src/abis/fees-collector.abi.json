{
  "buildInfo": {
    "rustc": {
      "version": "1.86.0",
      "commitHash": "05f9846f893b09a1be1fc8560e33fc3c815cfecb",
      "commitDate": "2025-03-31",
      "channel": "Stable",
      "short": "rustc 1.86.0 (05f9846f8 2025-03-31)"
    },
    "contractCrate": {
      "name": "fees-collector",
      "version": "0.0.0",
      "gitVersion": "v1.6.0-2032-gf2a9080a"
    },
    "framework": {
      "name": "multiversx-sc",
      "version": "0.53.2"
    }
  },
  "name": "FeesCollector",
  "constructor": {
    "docs": [
      "Base token burn percent is between 0 (0%) and 10_000 (100%)"
    ],
    "inputs": [
      {
        "name": "energy_factory_address",
        "type": "Address"
      },
      {
        "name": "router_address",
        "type": "Address"
      },
      {
        "name": "base_token_burn_percent",
        "type": "u64"
      },
      {
        "name": "admins",
        "type": "variadic<Address>",
        "multi_arg": true
      }
    ],
    "outputs": []
  },
  "upgradeConstructor": {
    "inputs": [],
    "outputs": []
  },
  "endpoints": [
    {
      "name": "addRewardTokens",
      "onlyOwner": true,
      "mutability": "mutable",
      "inputs": [
        {
          "name": "token_ids",
          "type": "variadic<TokenIdentifier>",
          "multi_arg": true
        }
      ],
      "outputs": []
    },
    {
      "name": "removeRewardTokens",
      "onlyOwner": true,
      "mutability": "mutable",
      "inputs": [
        {
          "name": "token_ids",
          "type": "variadic<TokenIdentifier>",
          "multi_arg": true
        }
      ],
      "outputs": []
    },
    {
      "name": "getRewardTokens",
      "mutability": "readonly",
      "inputs": [],
      "outputs": [
        {
          "type": "variadic<TokenIdentifier>",
          "multi_result": true
        }
      ]
    },
    {
      "name": "getAllowExternalClaimRewards",
      "mutability": "readonly",
      "inputs": [
        {
          "name": "user",
          "type": "Address"
        }
      ],
      "outputs": [
        {
          "type": "bool"
        }
      ]
    },
    {
      "name": "getLastActiveWeekForUser",
      "mutability": "readonly",
      "inputs": [
        {
          "name": "user",
          "type": "Address"
        }
      ],
      "outputs": [
        {
          "type": "u32"
        }
      ]
    },
    {
      "name": "getUserEnergyForWeek",
      "mutability": "readonly",
      "inputs": [
        {
          "name": "user",
          "type": "Address"
        },
        {
          "name": "week",
          "type": "u32"
        }
      ],
      "outputs": [
        {
          "type": "optional<Energy>",
          "multi_result": true
        }
      ]
    },
    {
      "name": "getLastGlobalUpdateWeek",
      "mutability": "readonly",
      "inputs": [],
      "outputs": [
        {
          "type": "u32"
        }
      ]
    },
    {
      "name": "getTotalRewardsForWeek",
      "mutability": "readonly",
      "inputs": [
        {
          "name": "week",
          "type": "u32"
        }
      ],
      "outputs": [
        {
          "type": "List<EsdtTokenPayment>"
        }
      ]
    },
    {
      "name": "getTotalEnergyForWeek",
      "mutability": "readonly",
      "inputs": [
        {
          "name": "week",
          "type": "u32"
        }
      ],
      "outputs": [
        {
          "type": "BigUint"
        }
      ]
    },
    {
      "name": "getTotalLockedTokensForWeek",
      "mutability": "readonly",
      "inputs": [
        {
          "name": "week",
          "type": "u32"
        }
      ],
      "outputs": [
        {
          "type": "BigUint"
        }
      ]
    },
    {
      "name": "updateEnergyForUser",
      "mutability": "mutable",
      "inputs": [
        {
          "name": "user",
          "type": "Address"
        }
      ],
      "outputs": []
    },
    {
      "name": "getCurrentClaimProgress",
      "mutability": "readonly",
      "inputs": [
        {
          "name": "user",
          "type": "Address"
        }
      ],
      "outputs": [
        {
          "type": "ClaimProgress"
        }
      ]
    },
    {
      "docs": [
        "Base token burn percent is between 0 (0%) and 10_000 (100%)"
      ],
      "name": "setBaseTokenBurnPercent",
      "onlyOwner": true,
      "mutability": "mutable",
      "inputs": [
        {
          "name": "burn_percent",
          "type": "u64"
        }
      ],
      "outputs": []
    },
    {
      "docs": [
        "Anyone can deposit tokens through this endpoint",
        "",
        "Deposits for current week are accessible starting next week",
        "",
        "The contract accepts all payments but only the base and locked tokens are verified and allocated"
      ],
      "name": "depositSwapFees",
      "mutability": "mutable",
      "payableInTokens": [
        "*"
      ],
      "inputs": [],
      "outputs": []
    },
    {
      "name": "getAccumulatedFees",
      "mutability": "readonly",
      "inputs": [
        {
          "name": "week",
          "type": "u32"
        },
        {
          "name": "token",
          "type": "TokenIdentifier"
        }
      ],
      "outputs": [
        {
          "type": "BigUint"
        }
      ]
    },
    {
      "name": "setLockedTokensPerBlock",
      "onlyOwner": true,
      "mutability": "mutable",
      "inputs": [
        {
          "name": "locked_tokens_per_block",
          "type": "BigUint"
        }
      ],
      "outputs": []
    },
    {
      "name": "getLastLockedTokensAddWeek",
      "mutability": "readonly",
      "inputs": [],
      "outputs": [
        {
          "type": "u32"
        }
      ]
    },
    {
      "name": "getLockedTokensPerBlock",
      "mutability": "readonly",
      "inputs": [],
      "outputs": [
        {
          "type": "BigUint"
        }
      ]
    },
    {
      "name": "setLockingScAddress",
      "onlyOwner": true,
      "mutability": "mutable",
      "inputs": [
        {
          "name": "new_address",
          "type": "Address"
        }
      ],
      "outputs": []
    },
    {
      "name": "setLockEpochs",
      "onlyOwner": true,
      "mutability": "mutable",
      "inputs": [
        {
          "name": "lock_epochs",
          "type": "u64"
        }
      ],
      "outputs": []
    },
    {
      "name": "getLockingScAddress",
      "mutability": "readonly",
      "inputs": [],
      "outputs": [
        {
          "type": "Address"
        }
      ]
    },
    {
      "name": "getLockEpochs",
      "mutability": "readonly",
      "inputs": [],
      "outputs": [
        {
          "type": "u64"
        }
      ]
    },
    {
      "name": "setEnergyFactoryAddress",
      "onlyOwner": true,
      "mutability": "mutable",
      "inputs": [
        {
          "name": "sc_address",
          "type": "Address"
        }
      ],
      "outputs": []
    },
    {
      "name": "getEnergyFactoryAddress",
      "mutability": "readonly",
      "inputs": [],
      "outputs": [
        {
          "type": "Address"
        }
      ]
    },
    {
      "docs": [
        "Week starts from 1"
      ],
      "name": "getCurrentWeek",
      "mutability": "readonly",
      "inputs": [],
      "outputs": [
        {
          "type": "u32"
        }
      ]
    },
    {
      "name": "getFirstWeekStartEpoch",
      "mutability": "readonly",
      "inputs": [],
      "outputs": [
        {
          "type": "u64"
        }
      ]
    },
    {
      "name": "pause",
      "onlyOwner": true,
      "mutability": "mutable",
      "inputs": [],
      "outputs": []
    },
    {
      "name": "unpause",
      "onlyOwner": true,
      "mutability": "mutable",
      "inputs": [],
      "outputs": []
    },
    {
      "name": "isPaused",
      "mutability": "readonly",
      "inputs": [],
      "outputs": [
        {
          "type": "bool"
        }
      ]
    },
    {
      "name": "addSCAddressToWhitelist",
      "onlyOwner": true,
      "mutability": "mutable",
      "inputs": [
        {
          "name": "address",
          "type": "Address"
        }
      ],
      "outputs": []
    },
    {
      "name": "removeSCAddressFromWhitelist",
      "onlyOwner": true,
      "mutability": "mutable",
      "inputs": [
        {
          "name": "address",
          "type": "Address"
        }
      ],
      "outputs": []
    },
    {
      "name": "isSCAddressWhitelisted",
      "mutability": "readonly",
      "inputs": [
        {
          "name": "address",
          "type": "Address"
        }
      ],
      "outputs": [
        {
          "type": "bool"
        }
      ]
    },
    {
      "name": "isAdmin",
      "mutability": "readonly",
      "inputs": [
        {
          "name": "address",
          "type": "Address"
        }
      ],
      "outputs": [
        {
          "type": "bool"
        }
      ]
    },
    {
      "name": "addAdmin",
      "onlyOwner": true,
      "mutability": "mutable",
      "inputs": [
        {
          "name": "address",
          "type": "Address"
        }
      ],
      "outputs": []
    },
    {
      "name": "removeAdmin",
      "onlyOwner": true,
      "mutability": "mutable",
      "inputs": [
        {
          "name": "address",
          "type": "Address"
        }
      ],
      "outputs": []
    },
    {
      "name": "getAdmins",
      "mutability": "readonly",
      "inputs": [],
      "outputs": [
        {
          "type": "variadic<Address>",
          "multi_result": true
        }
      ]
    },
    {
      "name": "claimRewards",
      "mutability": "mutable",
      "inputs": [
        {
          "name": "opt_original_caller",
          "type": "optional<Address>",
          "multi_arg": true
        }
      ],
      "outputs": [
        {
          "type": "List<EsdtTokenPayment>"
        }
      ]
    },
    {
      "name": "claimBoostedRewards",
      "mutability": "mutable",
      "inputs": [
        {
          "name": "opt_original_caller",
          "type": "optional<Address>",
          "multi_arg": true
        }
      ],
      "outputs": [
        {
          "type": "List<EsdtTokenPayment>"
        }
      ]
    },
    {
      "name": "redistributeRewards",
      "onlyAdmin": true,
      "mutability": "mutable",
      "inputs": [],
      "outputs": []
    },
    {
      "name": "setRouterAddress",
      "onlyOwner": true,
      "mutability": "mutable",
      "inputs": [
        {
          "name": "router_address",
          "type": "Address"
        }
      ],
      "outputs": []
    },
    {
      "docs": [
        "Swaps tokens to the base token (i.e. MEX).",
        "",
        "`token_to_send` must be a known token to the fees collector, and the very last token received must be MEX.",
        "",
        "The fees collector uses the given pair paths through the router contract.",
        "",
        "`swap_operations` are pairs of (pair address, pair function name, token wanted, min amount out)",
        "",
        "\"pair function name\" can only be \"swapTokensFixedInput\" or \"swapTokensFixedOutput\\",
        "",
        "\"min amount out\" is a minimum of 1"
      ],
      "name": "swapTokenToBaseToken",
      "onlyAdmin": true,
      "mutability": "mutable",
      "inputs": [
        {
          "name": "token_to_send",
          "type": "TokenIdentifier"
        },
        {
          "name": "swap_operations",
          "type": "variadic<multi<Address,bytes,TokenIdentifier,BigUint>>",
          "multi_arg": true
        }
      ],
      "outputs": []
    }
  ],
  "events": [
    {
      "identifier": "deposit_swap_fees_event",
      "inputs": [
        {
          "name": "caller",
          "type": "Address",
          "indexed": true
        },
        {
          "name": "current_week",
          "type": "u32",
          "indexed": true
        },
        {
          "name": "payment",
          "type": "EsdtTokenPayment",
          "indexed": true
        }
      ]
    },
    {
      "identifier": "claim_multi_event",
      "inputs": [
        {
          "name": "user",
          "type": "Address",
          "indexed": true
        },
        {
          "name": "current_week",
          "type": "u32",
          "indexed": true
        },
        {
          "name": "energy",
          "type": "Energy",
          "indexed": true
        },
        {
          "name": "all_payments",
          "type": "List<EsdtTokenPayment>"
        }
      ]
    },
    {
      "identifier": "update_user_energy_event",
      "inputs": [
        {
          "name": "user",
          "type": "Address",
          "indexed": true
        },
        {
          "name": "current_week",
          "type": "u32",
          "indexed": true
        },
        {
          "name": "energy",
          "type": "Energy",
          "indexed": true
        }
      ]
    },
    {
      "identifier": "update_global_amounts_event",
      "inputs": [
        {
          "name": "current_week",
          "type": "u32",
          "indexed": true
        },
        {
          "name": "total_locked_tokens",
          "type": "BigUint",
          "indexed": true
        },
        {
          "name": "total_energy",
          "type": "BigUint",
          "indexed": true
        }
      ]
    },
    {
      "identifier": "pauseContract",
      "inputs": []
    },
    {
      "identifier": "unpauseContract",
      "inputs": []
    }
  ],
  "esdtAttributes": [],
  "hasCallback": false,
  "types": {
    "ClaimProgress": {
      "type": "struct",
      "fields": [
        {
          "name": "energy",
          "type": "Energy"
        },
        {
          "name": "week",
          "type": "u32"
        }
      ]
    },
    "Energy": {
      "type": "struct",
      "fields": [
        {
          "name": "amount",
          "type": "BigInt"
        },
        {
          "name": "last_update_epoch",
          "type": "u64"
        },
        {
          "name": "total_locked_tokens",
          "type": "BigUint"
        }
      ]
    },
    "EsdtTokenPayment": {
      "type": "struct",
      "fields": [
        {
          "name": "token_identifier",
          "type": "TokenIdentifier"
        },
        {
          "name": "token_nonce",
          "type": "u64"
        },
        {
          "name": "amount",
          "type": "BigUint"
        }
      ]
    }
  }
}